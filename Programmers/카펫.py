# 입력 : Brown(8이상, 5,000이하의 자연수), Red(1이상 2,000,000이하의 자연수)
# 목표 : 중앙에는 Red, 모서리에는 Brown인 카펫의 가로/세로 길이를 반환


# 이 문제는 프로그래밍 관점이 아니라, 수학 방정식을 이용해서 풀 수 있지 않을까?
# 반환하는 리스트 값을 x, y라고 했을 때,
# Brown = 2 * (x + y - 2)
# Red = (x - 2) * (y - 2)
# 이 방정식을 풀기 위해서 for문을 사용

'''
def solution(b, r):
    for i in range(1, 2001) :
        if i*(i-2-b/2) == -(r+b) : return [i, 2+b/2-i]
'''


# 2가지 문제점
# 1 - 정수형을 기대하는데 실수형을 반환
# 2 - 가로 길이가 세로 길이보다 길거나 같아야 한다는 조건을 충족시키지 못함

def solution(b, r):
    for i in range(1, 2001) :
        if i*(i-2-b/2) == -(r+b) : return [int(2+b/2-i), i]