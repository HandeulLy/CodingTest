
'''

문제
    - 지도는 nxn인 정사각형 배열 형태, 각 칸은 공백(" ") 또는 벽("#")으로 이루어짐
    - 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다
    - 지도1 또는 지도2 중 어느 하나라도 벽인 부분은 전체 지도에서 벽이다.
    - 지도1과 지도2에서 모두 공백인 부분은 전체 지도에서 공백이다.
    - 지도1과 지도2는 각각 정수 배열로 암호화되어 있다.
    - 암호화된 배열은 벽 부분을 1, 공백 부분을 0으로 부호화해을 때 얻어지는 이진수에 해당하는 값의 배열이다.

입력
    - n : 지도의 한 변 크기, 1이상 16이하
    - arr1, arr2 : 정수 배열, 길이는 n, 
    - 정수 배열의 각 원소 x를 이진수로 변환했을 때 길이는 n이하(0 ≦ x ≦ 2**n - 1)

출력
    - 원래 비밀지도를 해독해 "#"와 " "로 구성된 문자열 배열 반환

'''

'''
우선, arr1과 arr2의 정수들을 이진수로 변환해야 한다.

이진수로 변환된 숫자들이 공통으로 0인 곳을 '공백'으로 간주한다.
자동적으로 나머지 부분은 '벽'으로 판단하여 1로 간주한다.

이러면 전체 지도를 구한 것이기 때문에, 출력 조건에 맞춰 반환한다.
1은 "#"으로, 0은 " "으로 치환해서 출력한다.
'''

def solution(n, arr1, arr2):
    answer, tmp = [], 0
    
    for i in range(n) :
        tmp = bin(arr1[i])[2:]
        arr1[i] = "0"*(n-len(tmp)) + str(tmp)
        tmp = bin(arr2[i])[2:]
        arr2[i] = "0"*(n-len(tmp)) + str(tmp)
        
        s = []
        for j in range(n) :
            if arr1[i][j] == '0' and arr2[i][j] == '0' : s.append(" ")
            else : s.append("#")
        
        answer.append("".join(s))
    
    #print(arr1)
    #print(arr2)
    #print(answer)
    return answer