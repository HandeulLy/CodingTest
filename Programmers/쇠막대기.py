'''

쇠막대기
- 링크 : https://programmers.co.kr/learn/courses/30/lessons/42585

문제
- 여러 쇠막대기를 레이저로 절단하는데, 쇠막대기를 겹쳐 놓고, 레이저를 위에서 수직으로 발사한다.
- 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다.
- 쇠막대기를 다른 쇠막대기 위에 놓는 경우, 완전히 포함되도록 놓되, 끝점은 겹치지 않는다.
- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.
- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.
- 레이저는 인접한 괄호 쌍 '()'으로 표현한다.
- 쇠막대기의 왼쪽 끝은 '(', 오른쪽 끝은 ')'로 표현한다.


이 때, 쇠막대기와 레이저의 배치를 표현한 arrangement가 매개변수로 주어질 때, 잘린 쇠막대기 조각의 총 개수를 반환하는 함수를 작성하라.
​

제한사항
- arrangement의 길이는 최대 100,000이다.
- arrangement의 괄호는 열고 닫는 쌍을 항상 이룬다.

'''

########################################################

'''

우선 스택의 개념을 이용해서 리스트를 활용하기로 했다.
열린 괄호는 리스트에 넣고, 닫는 괄호는 리스트에서 pop을 한다.
pop() 연산을 하는 순간 리스트에 존재하는 쇠막대기의 개수를 더한다.

'''

def solution(arrangement):
    st, ans = [], 0
    for i, a in enumerate(arrangement) :
        if a == '(' : st.append(a)
        else :
            st.pop()
            ans += len(st)
    return ans

########################################################

'''

위 작성한 코드는 ')' 괄호가 들어올 때 무조건 stack의 길이를 더하는데,
지금 들어온 닫는 괄호는 레이저가 아니라 쇠막대기의 끝점이기 때문에 전체 stack을 더하면 안된다.
따라서 마지막 남은 조각임을 알리기 위해 1만 더해야 한다.

'''

def solution(arrangement):
    st, ans = [], 0
    for i, a in enumerate(arrangement) :
        if a == '(' : st.append(a)
        else :
            st.pop()
            if arrangement[i-1] == '(' : ans += len(st)
            else : ans += 1
    return ans