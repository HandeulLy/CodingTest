# A : 고정 비용(임대료, 재산세, 보험료, 급여 등)
# B : 가변 비용(재료비, 인건비 등)
# C : 판매 가격

# n개를 생산할 때 총 생산 비용은 A + n * B
# # 총 수입(판매 비용)이 총 비용(=고정비용+가변비용)을 넘어서는 지점을 손익분기점(Break-even Point)라고 한다

# 목표 : A, B, C가 주어질 때, 손익 분기점을 구하는 프로그램 작성
# 입력 : A, B, C는 21억 이하의 자연수
# 출력 : 순익분기점이 최초로 발생하는 판매량 출력 / 손익분기점이 존재하지 않으면 -1 출력

# 수학적인 관점에서 생각하면 방정식으로 정리할 수 있지 않을까?
# (C만원 * n개) >?<? (A만원 + B만원 * n개) 의 값을 비교, 좌변이 더 큰 최소 n의 값을 찾으면 됨
# (C-B)*n > A 
# n > A / (C-B)

# 손익분기점이 발생하지 않는 조건?
# 판매가격보다 생산비용이 작거나 같은 경우
# 즉, B >= C 라면 -1을 반환해줘야 함

#############################################################
#############################################################

# Test
'''
def solution(A, B, C) :
    print(A, B, C)
    result = int(A / (C-B)) + 1 if B < C else -1
    print(result)
    return result 

a, b, c = input().split()
solution(int(a), int(b), int(c))
'''

#############################################################
#############################################################

# 내가 제출한 코드
'''
a, b, c = input().split()
result = int(int(a) / (int(c)-int(b))) + 1 if int(b) < int(c) else -1
print(result)
'''

#############################################################
#############################################################

# 내가 제출한 코드(수정)
'''
a,b,c = map(int, input().split())
print(int(a / (c-b)) + 1) if b < c else print(-1)
'''

#############################################################
#############################################################

# 내가 제출한 코드(수정2)
'''
a,b,c = map(int, input().split())
print(-1 if c-b<=0 else a//(c-b)+1)
'''