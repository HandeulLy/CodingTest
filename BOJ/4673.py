# 4673 - 셀프넘버

# 양의 정수 n에 대하여 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의한다
# n이 주어질 때, n - d(n) - d(d(n)) - d(d(d(n))) - ... 의 무한 수열을 만든다
# 예를 들어, 33으로 시작하면 다음 수는 33+3+3=39, 그 다음은 39+3+9=51이다

# n을 d(n)의 생성자라고 하는데, 위의 예시에서 33은 39의 생성자이고, 39는 51의 생성자이다
# 생성자가 1개 이상인 경우도 있는데, 101은 생성자가 91과 100 2개이다
# 생성자가 없는 숫자를 셀프 넘버라고 한다
# 100보다 작은 셀프 넘버는 총 13개(1, 3, 5, 7, 9, 20, 31 ,42, 53, 64, 75, 86, 97)이다

# 10,000보다 작거나 같은 셀프넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하는 것이 목표이다

# 입력 : 없음
# 출력 : 10,000이하의 숫자 중 셀프넘버를 증가하는 순서로 출력

#####################################################

'''

1~10,000의 숫자가 있는 리스트에서 셀프넘버를 삭제하고 출력한다

셀프넘버를 어떻게 삭제할 것인가?
재귀함수를 호출해서 다음 숫자를 계속해서 생성하면서 삭제를 진행

    

'''

#####################################################
#####################################################

numSet, delSet = set(range(1,10001)), set()

for i in range(1, 10001) :
    for j in str(i) :
        i+=int(j)
    delSet.add(i)

# numSet = numSet-delSet
print(sorted(numSet-delSet))
# def selfnum(n) :
    